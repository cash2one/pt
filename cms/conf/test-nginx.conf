
#user  nobody;
user root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    use   epoll;    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    worker_connections  1024;    #单个后台worker process进程的最大并发链接数
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    keepalive_timeout  65;

    #客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。
    #分页大小可以用命令getconf PAGESIZE 取得。
    client_header_buffer_size 4k;

    #开启gzip压缩
    gzip  on;
	
	server {

        listen   8000;
        server_name www.you.name;
        access_log /tmp/cms/access.log;
        error_log /tmp/cms/error.log;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
         include        uwsgi_params;
         uwsgi_pass     127.0.0.1:8077;
         uwsgi_read_timeout 300;
        }

        #error_page  404              /html/404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /registration/500.html;
        #location = /registration/500.html {
        #    root   html;
        #}

        location /static/ {
            alias  /mnt/hgfs/cms/static/;
            index  index.html index.htm;
        }

        location /media/ {
            alias  /mnt/hgfs/cms/media/;
        }
    }

}
